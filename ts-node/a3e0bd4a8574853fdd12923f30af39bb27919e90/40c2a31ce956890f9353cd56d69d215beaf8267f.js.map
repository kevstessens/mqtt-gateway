{"version":3,"file":"/root/code/mqtt-gateway/app/authentication/authenticate.ts","sources":["/root/code/mqtt-gateway/app/authentication/authenticate.ts"],"names":[],"mappings":";AAAA,4BAA4B;AAC5B,yDAAuD;AACvD,oCAAgC;AAChC,qDAAmD;AACnD,qDAAmD;AAGnD,yDAAyD;AACzD,sBAA6B,MAAM,EAAE,QAAqB,EAAE,QAAqB,EAAE,QAAQ;IACvF,YAAG,CAAC,YAAY,CAAC,CAAC;IAClB,IAAI,EAAE,GAAG,gCAAc,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACpD,IAAI,EAAE,GAAG,gCAAc,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACpD,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC;QACvB,0BAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,EAAE,CAAC,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC,CAAC;IACpD,CAAC;AACL,CAAC;AATD,oCASC","sourcesContent":["// test@test.com password123\nimport { verifyToken } from \"../security/verify_token\";\nimport { log } from \"../logger\";\nimport { authenticateOk } from \"./authenticate_ok\";\nimport { authenticateNo } from \"./authenticate_no\";\ntype MaybeString = string | undefined;\n\n/** Determine if user is authorized to use the server. */\nexport function authenticate(client, username: MaybeString, password: MaybeString, callback) {\n    log(\"AUTH START\");\n    let ok = authenticateOk(client, callback, username);\n    let no = authenticateNo(client, callback, username);\n    if (username && password) {\n        verifyToken(password.toString()).then(ok, no);\n    } else {\n        no(new Error(\"username and password required\"));\n    }\n}\n"]}