{"version":3,"file":"/root/code/mqtt-gateway/app/on_ready.ts","sources":["/root/code/mqtt-gateway/app/on_ready.ts"],"names":[],"mappings":";AAAA,8DAA6D;AAC7D,uEAAqE;AACrE,2EAAyE;AACzE,mCAA+B;AAEpB,QAAA,OAAO,GAAG,UAAC,MAAM,IAAK,OAAA;IAC7B,YAAG,CAAC,eAAe,CAAC,CAAC;IACrB,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,cAAM,OAAA,YAAG,CAAC,iBAAiB,CAAC,EAAtB,CAAsB,CAAC,CAAC;IAC3D,MAAM,CAAC,EAAE,CAAC,qBAAqB,EAAE,cAAM,OAAA,YAAG,CAAC,qBAAqB,CAAC,EAA1B,CAA0B,CAAC,CAAC;IACnE,MAAM,CAAC,EAAE,CAAC,oBAAoB,EAAE,cAAM,OAAA,YAAG,CAAC,oBAAoB,CAAC,EAAzB,CAAyB,CAAC,CAAC;IACjE,MAAM,CAAC,EAAE,CAAC,WAAW,EAAE;QACnB,YAAG,CAAC,WAAW,CAAC,CAAC;QACjB,IAAI,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAC/E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QACxD,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC;IACL,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,cAAM,OAAA,YAAG,CAAC,YAAY,CAAC,EAAjB,CAAiB,CAAC,CAAC;IACjD,MAAM,CAAC,EAAE,CAAC,cAAc,EAAE,cAAM,OAAA,YAAG,CAAC,cAAc,CAAC,EAAnB,CAAmB,CAAC,CAAC;IACrD,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,cAAM,OAAA,YAAG,CAAC,OAAO,CAAC,EAAZ,CAAY,CAAC,CAAC;IACvC,MAAM,CAAC,YAAY,GAAG,2BAAY,CAAC;IACnC,MAAM,CAAC,gBAAgB,GAAG,oCAAgB,CAAC;IAC3C,MAAM,CAAC,kBAAkB,GAAG,wCAAkB,CAAC;AACnD,CAAC,EArBgC,CAqBhC,CAAC","sourcesContent":["import { authenticate } from \"./authentication/authenticate\";\nimport { authorizePublish } from \"./authorization/authorize_publish\";\nimport { authorizeSubscribe } from \"./authorization/authorize_subscribe\";\nimport { log } from \"./logger\";\n\nexport let onReady = (server) => () => {\n    log(\"Server online\");\n    server.on(\"clientConnected\", () => log(\"clientConnected\"));\n    server.on(\"clientDisconnecting\", () => log(\"clientDisconnecting\"));\n    server.on(\"clientDisconnected\", () => log(\"clientDisconnected\"));\n    server.on(\"published\", function () {\n        log(\"published\");\n        try {\n            console.log(arguments[0].topic);\n            var s = String.fromCharCode.apply(null, new Uint16Array(arguments[0].payload));\n            console.log(JSON.stringify(JSON.parse(s), null, 2));\n        } catch (error) {\n            console.dir(error);\n        }\n    });\n    server.on(\"subscribed\", () => log(\"subscribed\"));\n    server.on(\"unsubscribed\", () => log(\"unsubscribed\"));\n    server.on(\"error\", () => log(\"error\"));\n    server.authenticate = authenticate;\n    server.authorizePublish = authorizePublish;\n    server.authorizeSubscribe = authorizeSubscribe;\n};\n"]}